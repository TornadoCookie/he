He(lium): A build system tailored for very specific programs made in raylib

Source structure:

<Root>
|->src - source files
|->lib - libraries
|->HeFile - "make"file
|->HePlatforms - special options for each platform

HeFile directives:
DefaultPlatform [str]: sets the default value for the PLATFORM environment variable. (Default: linux64-debug)
DefaultDistDir [str]: sets the default value for the DISTDIR environment variable. (Default: .)
RaylibVersion [str]: sets the raylib version. (Default: 5)
UseRaylib [bool]: whether or not the project is using raylib.

Dependency [str]: Add a single-header header-only dependency. The makefile will look in lib/[dependency]/src and lib/[dependency]/include for the header.
NativeDependency [str]: Add a native dependency. The makefile will look in lib/[dependency]-[platform]/lib for the libraries and lib/[dependency]-[platform]/include for the headers.
ExtraCFlag [str]: Add an extra flag to GCC.

Program [str]: define a new program.
Library [str]: define a new library.
SourceGroup [str]: define a new source group.

Under a program or library directive:
UseSourceGroup [str]: Add the source files in the source group to the program.
Source [str]: Add a source file to the program.

HePlatforms directives:
Platform [str]: define a new platform.

Under a platform directive:
ExecExtension [str]: The file extension of an executable targeting this platform.
LibExtension [str]: The file extension of a library targeting this platform.
Compiler [str]: The compiler to use. (Default value of the CC environment variable)
RaylibLdFlag [str]: The flag to be added to LDFLAGS when using raylib (on windows it is -lraylibdll while on linux it is just -lraylib.)
IsRelease [bool]: Whether or not the platform is meant for production. (Add optimization flags)
IsDebug [bool]: Whether or not the platform is meant for debugging. (Add debugging flags)
ExtraCFlag [str]: Add an extra flag to GCC for this platform only.
